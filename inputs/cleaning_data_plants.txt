steps to clean branching file:
############################################################

format of expert file:
______0_______________1_______2_______3________4____________5________________6_______
classification_id,user_name,user_id,user_ip,workflow_id,workflow_name,workflow_version,
_____7________8____________9______10_________11___________12_________13______
created_at,gold_standard,expert,metadata,annotations,subject_data,subject_ids

#___________________   0    ____   1   ____    2    _#
classifications = ["not sure", "regular", "irregular"]

first process expert file for comparison:

subject_id = subject_ids

report:
	subject_id:
		expert_classification: classifications[annotations[0].get("value")]
		expert_user_id: user_id
		workflow_id: workflow_id
		expert_classified_at: created_at
		subject_filename: subject_data.get(subject_id).get("Filename")


next, process public classifications for set classified by an expert, and add:
every classification of this subject, count:
1. create dict:
	- key: subject_id
	- val: dict: notsure - count
			 regular - count
			 irregular - count	

2. total classifications
3. percent_match
4. percent_sure
5. percent_not_sure
6. percent_sure_no_match - percent of sure answers that agreed with matt

Processing classifications:
1. stem-and-branching-patterns-classifications


1. iterate line by line
2. grab subject_ids and annotations.value
3. dict[subject_id][value] +=1

at end, calculate percentages

#######################################################
steps to generate reproductive report
#######################################################
expert-reproductive-classifications.csv: "MattvonKonrat-determining-the-reproductive-structure-of-a-liverwort-classifications.xlsx" 
public-reproductive-classifications.csv: "C:\Users\lwszolek\repos\microplants\inputs\determining-the-reproductive-structure-of-a-liverwort-classification (1.28-2.1).xlsx"

- note that matt's own classifications live in these files and should probably be removed
